/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package outros;

import br.com.gap.view.util.FuncoesInterface;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.swingBean.actions.ApplicationAction;
import org.swingBean.descriptor.BeanTableModel;
import org.swingBean.descriptor.GenericFieldDescriptor;
import org.swingBean.descriptor.TableFieldDescriptor;
import org.swingBean.gui.JBeanPanel;
import org.swingBean.gui.JBeanTable;

/**
 *
 * @author mjustino
 */
public abstract class GUICadastro<T> extends GUI implements IGUICadastro<T> {

    private T registroAtual;
    public JBeanPanel<T> pnlPesquisa;
    ApplicationAction pesquisaPropertyChanged = new ApplicationAction() {

        @Override
        public void execute() {
            modelTabelaResultado.setBeanList(new ArrayList<T>());
            pnlManutencao.cleanForm();
        }
    };
    private BeanTableModel<T> modelTabelaResultado;
    public JBeanPanel<T> pnlManutencao;
    private JBeanTable grdResultado;
    private final Class<T> clazz;

    public T getRegistroAtual() {
        return registroAtual;
    }

    /**
     * Creates new form GUIUsuario
     */
    public GUICadastro(Class<T> clazz) throws InstantiationException, IllegalAccessException {
        initComponents();
        
        this.title = getTitulo();

        registroAtual = clazz.newInstance();
        this.clazz = clazz;

        pnlInternoPesquisa.add(getPanelPesquisa());
        associarPesquisaPropertyChanged();

        pnlInternoResultado.add(getPanelResultado());

        pnlInternoManutencao.add(getPanelManutencao());

        grdResultado.addDoubleClickAction(new ApplicationAction() {

            @Override
            public void execute() {
                tpgControle.setSelectedComponent(tpgManutencao);
            }
        });
    }

    private void associarPesquisaPropertyChanged() {
        for (String p : getPesquisaPropertiesToChanged()) {
            pnlPesquisa.associateAction(p, pesquisaPropertyChanged);
        }
    }

    private JPanel getPanelPesquisa() {
        GenericFieldDescriptor descriptor = getDescriptorPesquisa();
        pnlPesquisa = new JBeanPanel<>(clazz, descriptor);

        return pnlPesquisa;
    }

    private JScrollPane getPanelResultado() {
        TableFieldDescriptor descriptor = getTableDescriptorResultado();
        modelTabelaResultado = new BeanTableModel<>(descriptor);
        grdResultado = new JBeanTable(modelTabelaResultado);

        return new JScrollPane(grdResultado);
    }

    private JPanel getPanelManutencao() {
        GenericFieldDescriptor descriptor = getDescriptorManutencao();
        pnlManutencao = new JBeanPanel<>(clazz, descriptor);

        return pnlManutencao;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tpgControle = new javax.swing.JTabbedPane();
        tpgPesquisa = new javax.swing.JPanel();
        btnPLocalizar = new javax.swing.JButton();
        pnlInternoPesquisa = new javax.swing.JPanel();
        tpgResultado = new javax.swing.JPanel();
        btnRSelecionar = new javax.swing.JButton();
        pnlInternoResultado = new javax.swing.JPanel();
        tpgManutencao = new javax.swing.JPanel();
        btnMSave = new javax.swing.JButton();
        pnlInternoManutencao = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("G.A.P - Cadastros");
        setFrameIcon(null);
        setMinimumSize(new java.awt.Dimension(550, 388));
        setName("GUIUsuario");

        btnPLocalizar.setText("Localizar");
        btnPLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPLocalizarActionPerformed(evt);
            }
        });

        pnlInternoPesquisa.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout tpgPesquisaLayout = new javax.swing.GroupLayout(tpgPesquisa);
        tpgPesquisa.setLayout(tpgPesquisaLayout);
        tpgPesquisaLayout.setHorizontalGroup(
            tpgPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpgPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpgPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tpgPesquisaLayout.createSequentialGroup()
                        .addGap(0, 428, Short.MAX_VALUE)
                        .addComponent(btnPLocalizar))
                    .addComponent(pnlInternoPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tpgPesquisaLayout.setVerticalGroup(
            tpgPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpgPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInternoPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPLocalizar)
                .addContainerGap())
        );

        tpgControle.addTab("Pesquisa", tpgPesquisa);

        btnRSelecionar.setText("Selecionar");
        btnRSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRSelecionarActionPerformed(evt);
            }
        });

        pnlInternoResultado.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout tpgResultadoLayout = new javax.swing.GroupLayout(tpgResultado);
        tpgResultado.setLayout(tpgResultadoLayout);
        tpgResultadoLayout.setHorizontalGroup(
            tpgResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tpgResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpgResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlInternoResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                    .addGroup(tpgResultadoLayout.createSequentialGroup()
                        .addGap(0, 420, Short.MAX_VALUE)
                        .addComponent(btnRSelecionar)))
                .addContainerGap())
        );
        tpgResultadoLayout.setVerticalGroup(
            tpgResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpgResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInternoResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRSelecionar)
                .addContainerGap())
        );

        tpgControle.addTab("Resultado", tpgResultado);

        tpgManutencao.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tpgManutencaoComponentShown(evt);
            }
        });

        btnMSave.setText("Salvar");
        btnMSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMSaveActionPerformed(evt);
            }
        });

        pnlInternoManutencao.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout tpgManutencaoLayout = new javax.swing.GroupLayout(tpgManutencao);
        tpgManutencao.setLayout(tpgManutencaoLayout);
        tpgManutencaoLayout.setHorizontalGroup(
            tpgManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tpgManutencaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpgManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlInternoManutencao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tpgManutencaoLayout.createSequentialGroup()
                        .addGap(0, 438, Short.MAX_VALUE)
                        .addComponent(btnMSave)))
                .addContainerGap())
        );
        tpgManutencaoLayout.setVerticalGroup(
            tpgManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpgManutencaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInternoManutencao, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMSave)
                .addContainerGap())
        );

        tpgControle.addTab("Manutenção", tpgManutencao);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tpgControle)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpgControle)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pesquisarRegistros() throws Exception {
        List<T> registrosEncontrados = pesquisar();
        carregarResultados(registrosEncontrados);
    }

    private void tpgManutencaoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tpgManutencaoComponentShown
        try {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.WAIT_CURSOR);

            atualizaCamposManutencao();
        } catch (Exception ex) {
            GUIMensagem.showMessage(ex);
        } finally {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.DEFAULT_CURSOR);
        }
    }//GEN-LAST:event_tpgManutencaoComponentShown

    private void btnRSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRSelecionarActionPerformed
        tpgControle.setSelectedComponent(tpgManutencao);
    }//GEN-LAST:event_btnRSelecionarActionPerformed

    private void btnPLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPLocalizarActionPerformed
        try {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.WAIT_CURSOR);

            pesquisarRegistros();
        } catch (Exception ex) {
            GUIMensagem.showMessage(ex);
        } finally {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.DEFAULT_CURSOR);
        }
    }//GEN-LAST:event_btnPLocalizarActionPerformed

    private void btnMSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMSaveActionPerformed
        try {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.WAIT_CURSOR);

            salvarRegistro();
        } catch (Exception ex) {
            GUIMensagem.showMessage(ex);
        } finally {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.DEFAULT_CURSOR);
        }
    }//GEN-LAST:event_btnMSaveActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        try {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.WAIT_CURSOR);

            incluirNovoRegistro();
        } catch (InstantiationException | IllegalAccessException ex) {
            GUIMensagem.showMessage(ex);
        } finally {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.DEFAULT_CURSOR);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        try {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.WAIT_CURSOR);

            removerRegistro();
        } catch (Exception ex) {
            GUIMensagem.showMessage(ex);
        } finally {
            FuncoesInterface.setCursor(this, FuncoesInterface.TipoCursor.DEFAULT_CURSOR);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnMSave;
    private javax.swing.JButton btnPLocalizar;
    private javax.swing.JButton btnRSelecionar;
    private javax.swing.JButton btnRemover;
    private javax.swing.ButtonGroup buttonGroup1;
    protected javax.swing.JPanel pnlInternoManutencao;
    protected javax.swing.JPanel pnlInternoPesquisa;
    protected javax.swing.JPanel pnlInternoResultado;
    private javax.swing.JTabbedPane tpgControle;
    private javax.swing.JPanel tpgManutencao;
    private javax.swing.JPanel tpgPesquisa;
    private javax.swing.JPanel tpgResultado;
    // End of variables declaration//GEN-END:variables

    private void carregarResultados(List<T> registros) {
        modelTabelaResultado.setBeanList(registros);
        tpgControle.setSelectedComponent(tpgResultado);
    }

    private void atualizaCamposManutencao() {
        int index = grdResultado.getSelectedRow();
        if (index != -1) {
            registroAtual = modelTabelaResultado.getBeanAt(index);
            pnlManutencao.setBean(registroAtual);
        } else {
            pnlManutencao.cleanForm();
        }
    }

    private void salvarRegistro() throws Exception {
        if (registroAtual == null) {
            registroAtual = clazz.newInstance();
            pnlManutencao.populateBean(registroAtual);
            registroAtual = adicionarRegistro(registroAtual);
        } else {
            pnlManutencao.populateBean(registroAtual);
            registroAtual = alterarRegistro(registroAtual);
        }
    }

    private void incluirNovoRegistro() throws InstantiationException, IllegalAccessException {
        registroAtual = null;
        tpgControle.setSelectedComponent(tpgManutencao);
        pnlManutencao.cleanForm();
        pnlManutencao.requestFocus();
    }

    private void removerRegistro() throws Exception {
        int index = grdResultado.getSelectedRow();
        if (index != -1) {
            registroAtual = modelTabelaResultado.getBeanAt(index);

            if (registroAtual != null) {
                removerRegistro(registroAtual);
            }

            pesquisarRegistros();
        }
    }
}