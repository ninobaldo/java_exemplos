/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.gap.view.ui;

import br.com.gap.view.ui.cliente.GUICliente;
import br.com.gap.view.ui.configuracao.GUIConfiguracao;
import br.com.gap.view.ui.mensalista.GUIHorariosMensalista;
import br.com.gap.view.ui.quadra.GUIQuadra;
import br.com.gap.view.ui.usuario.GUIUsuario;
import br.com.gap.view.util.Session;
import java.awt.event.KeyEvent;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.KeyStroke;

/**
 *
 * @author mjustino
 */
public class GUIPrincipal extends javax.swing.JFrame {

    private GUICliente guiCliente;
    private GUIUsuario guiUsuario;
    private GUISobre guiSobre;
    private GUIQuadra guiQuadra;
    private GUIConfiguracao guiConfiguracao;
    private GUIHorariosMensalista guiHorariosMensalista;

    /**
     * Permite que as telas MDI internas à outras telas MDI possam ser incluídas
     * dentro do desktopPane
     *
     * @return
     */
    public JDesktopPane getDesktopPane() {
        return desktopPane;
    }

    public GUIPrincipal() {
        initComponents();

        setIconImage();
        this.setLocationRelativeTo(null);
        this.desactivePrincipal();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setMenuAccelerators();
    }

    private void setIconImage() {
//        // coloca uma figura na barra de título da janela  
//        URL url = this.getClass().getResource("br/com/gap/view/ui/resources/gap.png");
//        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);  
//        this.setIconImage(imagemTitulo);
    }

    private void activatePrincipal() {
        menuBar.setVisible(true);
    }

    private void desactivePrincipal() {
        menuBar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        menuSistema = new javax.swing.JMenu();
        mnuSistemaSair = new javax.swing.JMenuItem();
        mnuSistemaConfiguracao = new javax.swing.JMenuItem();
        menuCadastro = new javax.swing.JMenu();
        mnuCadastroCliente = new javax.swing.JMenuItem();
        mnuCadastroAluno = new javax.swing.JMenuItem();
        mnuCadastroProfessor = new javax.swing.JMenuItem();
        mnuCadastroQuadra = new javax.swing.JMenuItem();
        mnuCadastroUsuario = new javax.swing.JMenuItem();
        mnuCadastroHorariosMensalista = new javax.swing.JMenuItem();
        menuRelatorio = new javax.swing.JMenu();
        mnuRelatorioClientes = new javax.swing.JMenuItem();
        mnuRelatorioUsuarios = new javax.swing.JMenuItem();
        mnuRelatorioHorariosQuadras = new javax.swing.JMenuItem();
        menuAjuda = new javax.swing.JMenu();
        mnuAjudaSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("G.A.P");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        menuSistema.setMnemonic('S');
        menuSistema.setText("Sistema");

        mnuSistemaSair.setMnemonic('X');
        mnuSistemaSair.setText("Sair");
        mnuSistemaSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSistemaSairActionPerformed(evt);
            }
        });
        menuSistema.add(mnuSistemaSair);

        mnuSistemaConfiguracao.setMnemonic('C');
        mnuSistemaConfiguracao.setText("Configurações");
        mnuSistemaConfiguracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSistemaConfiguracaoActionPerformed(evt);
            }
        });
        menuSistema.add(mnuSistemaConfiguracao);

        menuBar.add(menuSistema);

        menuCadastro.setMnemonic('C');
        menuCadastro.setText("Cadastro");

        mnuCadastroCliente.setMnemonic('t');
        mnuCadastroCliente.setText("Cliente");
        mnuCadastroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCadastroClienteActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuCadastroCliente);

        mnuCadastroAluno.setMnemonic('y');
        mnuCadastroAluno.setText("Aluno");
        menuCadastro.add(mnuCadastroAluno);

        mnuCadastroProfessor.setText("Professor");
        menuCadastro.add(mnuCadastroProfessor);

        mnuCadastroQuadra.setText("Quadra");
        mnuCadastroQuadra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCadastroQuadraActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuCadastroQuadra);

        mnuCadastroUsuario.setText("Usuário");
        mnuCadastroUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCadastroUsuarioActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuCadastroUsuario);

        mnuCadastroHorariosMensalista.setMnemonic('H');
        mnuCadastroHorariosMensalista.setText("Horários / Mensalista");
        mnuCadastroHorariosMensalista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCadastroHorariosMensalistaActionPerformed(evt);
            }
        });
        menuCadastro.add(mnuCadastroHorariosMensalista);

        menuBar.add(menuCadastro);

        menuRelatorio.setMnemonic('R');
        menuRelatorio.setText("Relatório");

        mnuRelatorioClientes.setText("Clientes");
        menuRelatorio.add(mnuRelatorioClientes);

        mnuRelatorioUsuarios.setText("Usuários");
        menuRelatorio.add(mnuRelatorioUsuarios);

        mnuRelatorioHorariosQuadras.setText("Horários x Quadras");
        menuRelatorio.add(mnuRelatorioHorariosQuadras);

        menuBar.add(menuRelatorio);

        menuAjuda.setMnemonic('A');
        menuAjuda.setText("Ajuda");

        mnuAjudaSobre.setMnemonic('S');
        mnuAjudaSobre.setText("Sobre");
        mnuAjudaSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAjudaSobreActionPerformed(evt);
            }
        });
        menuAjuda.add(mnuAjudaSobre);

        menuBar.add(menuAjuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSistemaSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSistemaSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuSistemaSairActionPerformed

    private void mnuAjudaSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAjudaSobreActionPerformed
        if ((guiSobre == null) || (!guiSobre.isVisible())) {
            guiSobre = new GUISobre();
            desktopPane.add(guiSobre);
            guiSobre.setPosition();
            guiSobre.setVisible(true);
        }
    }//GEN-LAST:event_mnuAjudaSobreActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        GUILogin login = new GUILogin(this, true);
        login.setVisible(true);

        if (Session.usuarioLogado == null) {
            CloseApplication();
            System.out.println("Saindo do sistema: solicitação de saída antes do usuário realizar login.");
        } else {
            login.dispose();
            activatePrincipal();
        }

        System.out.printf("Usuário logado: %s", Session.usuarioLogado.getLogin());
    }//GEN-LAST:event_formWindowOpened

    private void mnuCadastroUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCadastroUsuarioActionPerformed
        if ((guiUsuario == null) || (!guiUsuario.isVisible())) {
            try {
                guiUsuario = new GUIUsuario();
            } catch (InstantiationException | IllegalAccessException ex) {
                GUIMensagem.showMessage(ex);
            }
            desktopPane.add(guiUsuario);
            guiUsuario.setPosition();
            guiUsuario.setVisible(true);
        }
    }//GEN-LAST:event_mnuCadastroUsuarioActionPerformed

    private void mnuCadastroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCadastroClienteActionPerformed
        if ((guiCliente == null) || (!guiCliente.isVisible())) {
            try {
                guiCliente = new GUICliente(this);
            } catch (InstantiationException | IllegalAccessException ex) {
                GUIMensagem.showMessage(ex);
            }
            desktopPane.add(guiCliente);
            guiCliente.setPosition();
            guiCliente.setVisible(true);
        }
    }//GEN-LAST:event_mnuCadastroClienteActionPerformed

    private void mnuCadastroQuadraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCadastroQuadraActionPerformed
        if ((guiQuadra == null) || (!guiQuadra.isVisible())) {
            try {
                guiQuadra = new GUIQuadra();
            } catch (Exception ex) {
                GUIMensagem.showMessage(ex);
            }
            desktopPane.add(guiQuadra);
            guiQuadra.setPosition();
            guiQuadra.setVisible(true);
        }
    }//GEN-LAST:event_mnuCadastroQuadraActionPerformed

    private void mnuSistemaConfiguracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSistemaConfiguracaoActionPerformed
        if ((guiConfiguracao == null) || (!guiConfiguracao.isVisible())) {
            try {
                guiConfiguracao = new GUIConfiguracao();
            } catch (Exception ex) {
                GUIMensagem.showMessage(ex);
            }
            desktopPane.add(guiConfiguracao);
            guiConfiguracao.setPosition();
            guiConfiguracao.setVisible(true);
        }
    }//GEN-LAST:event_mnuSistemaConfiguracaoActionPerformed

    private void mnuCadastroHorariosMensalistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCadastroHorariosMensalistaActionPerformed
        if ((guiHorariosMensalista == null) || (!guiHorariosMensalista.isVisible())) {
            try {
                guiHorariosMensalista = new GUIHorariosMensalista(this);
            } catch (Exception ex) {
                GUIMensagem.showMessage(ex);
            }
            desktopPane.add(guiHorariosMensalista);
            guiHorariosMensalista.setPosition();
            guiHorariosMensalista.setVisible(true);
        }
    }//GEN-LAST:event_mnuCadastroHorariosMensalistaActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu menuAjuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuCadastro;
    private javax.swing.JMenu menuRelatorio;
    private javax.swing.JMenu menuSistema;
    private javax.swing.JMenuItem mnuAjudaSobre;
    private javax.swing.JMenuItem mnuCadastroAluno;
    private javax.swing.JMenuItem mnuCadastroCliente;
    private javax.swing.JMenuItem mnuCadastroHorariosMensalista;
    private javax.swing.JMenuItem mnuCadastroProfessor;
    private javax.swing.JMenuItem mnuCadastroQuadra;
    private javax.swing.JMenuItem mnuCadastroUsuario;
    private javax.swing.JMenuItem mnuRelatorioClientes;
    private javax.swing.JMenuItem mnuRelatorioHorariosQuadras;
    private javax.swing.JMenuItem mnuRelatorioUsuarios;
    private javax.swing.JMenuItem mnuSistemaConfiguracao;
    private javax.swing.JMenuItem mnuSistemaSair;
    // End of variables declaration//GEN-END:variables

    private void setMenuAccelerators() {
        mnuSistemaSair.setAccelerator(KeyStroke.getKeyStroke('X', KeyEvent.ALT_DOWN_MASK));
        mnuSistemaConfiguracao.setAccelerator(KeyStroke.getKeyStroke('C', KeyEvent.ALT_DOWN_MASK));

        mnuCadastroAluno.setAccelerator(KeyStroke.getKeyStroke('A', KeyEvent.ALT_DOWN_MASK));
        mnuCadastroCliente.setAccelerator(KeyStroke.getKeyStroke('E', KeyEvent.ALT_DOWN_MASK));
        mnuCadastroProfessor.setAccelerator(KeyStroke.getKeyStroke('P', KeyEvent.ALT_DOWN_MASK));
        mnuCadastroQuadra.setAccelerator(KeyStroke.getKeyStroke('Q', KeyEvent.ALT_DOWN_MASK));
        mnuCadastroUsuario.setAccelerator(KeyStroke.getKeyStroke('U', KeyEvent.ALT_DOWN_MASK));
        mnuCadastroHorariosMensalista.setAccelerator(KeyStroke.getKeyStroke('H', KeyEvent.ALT_DOWN_MASK));

        mnuRelatorioClientes.setAccelerator(KeyStroke.getKeyStroke('E', KeyEvent.ALT_DOWN_MASK));
        mnuRelatorioHorariosQuadras.setAccelerator(KeyStroke.getKeyStroke('H', KeyEvent.ALT_DOWN_MASK));
        mnuRelatorioUsuarios.setAccelerator(KeyStroke.getKeyStroke('U', KeyEvent.ALT_DOWN_MASK));

        mnuAjudaSobre.setAccelerator(KeyStroke.getKeyStroke('S', KeyEvent.ALT_DOWN_MASK));
    }

    private void CloseApplication() {
        this.dispose();
    }
}
